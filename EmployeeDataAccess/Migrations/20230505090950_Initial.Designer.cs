// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VodkaDataAccess;

#nullable disable

namespace VodkaDataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230505090950_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VodkaEntities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descript")
                        .HasColumnType("longtext");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VodkaEntities.Paymentmethod", b =>
                {
                    b.Property<string>("PaymentMethodId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descript")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("Paymentmethods");
                });

            modelBuilder.Entity("VodkaEntities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descript")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageSource")
                        .HasColumnType("longtext");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quan")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VodkaEntities.Taxinfo", b =>
                {
                    b.Property<string>("TaxId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descript")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TaxId");

                    b.ToTable("Taxinfos");
                });

            modelBuilder.Entity("VodkaEntities.Transactdetail", b =>
                {
                    b.Property<string>("TransactDetailId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("CostEach")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Quan")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactHeaderId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("TransactDetailId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransactHeaderId");

                    b.ToTable("Transactdetails");
                });

            modelBuilder.Entity("VodkaEntities.Transactheader", b =>
                {
                    b.Property<string>("TransactHeaderId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Net")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Tax1")
                        .HasColumnType("int");

                    b.Property<int?>("Tax2")
                        .HasColumnType("int");

                    b.Property<int?>("Tax3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimePayment")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("TransactHeaderId");

                    b.ToTable("Transactheaders");
                });

            modelBuilder.Entity("VodkaEntities.Useraccount", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("TotalCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Useraccounts");
                });

            modelBuilder.Entity("VodkaEntities.Product", b =>
                {
                    b.HasOne("VodkaEntities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VodkaEntities.Transactdetail", b =>
                {
                    b.HasOne("VodkaEntities.Product", "Product")
                        .WithMany("TransactDetails")
                        .HasForeignKey("ProductId");

                    b.HasOne("VodkaEntities.Transactheader", "TransactHeader")
                        .WithMany("TransactDetails")
                        .HasForeignKey("TransactHeaderId");

                    b.Navigation("Product");

                    b.Navigation("TransactHeader");
                });

            modelBuilder.Entity("VodkaEntities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("VodkaEntities.Product", b =>
                {
                    b.Navigation("TransactDetails");
                });

            modelBuilder.Entity("VodkaEntities.Transactheader", b =>
                {
                    b.Navigation("TransactDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
